{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\client\\\\src\\\\components\\\\mainScreen\\\\snippets\\\\Snippets.js\",\n    _s = $RefreshSig$();\n\nimport useFetch from '../../../services/useFetch';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Snippets = () => {\n  _s();\n\n  const api = '/api/snippets';\n  const [test, setTest] = useState(); // const postData = async (url, data) => {\n  //   const res = await fetch(url, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify(data),\n  //   })\n  //     .then((res) => res.text())\n  //     .then((res) => setTest(() => res));\n  //   return res;\n  // };\n  // useEffect(() => {\n  //   postData(api, { test: 'snippet 4' });\n  // }, []);\n  // postData(api, { test: 'snippet 4' })\n  //   .then((res) => res.text())\n  //   .then((res) => setTest(() => res));\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(api); // console.log(test);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Error!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: data.map((e, index) => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/snippets/${e}`,\n          children: e\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: data.map((e, index) => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/snippets/${e}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Snippets, \"FtQRYanXfSQz/b3dTX/7x40Od54=\", false, function () {\n  return [useFetch];\n});\n\n_c = Snippets;\nexport default Snippets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Snippets\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/client/src/components/mainScreen/snippets/Snippets.js"],"names":["useFetch","useState","useEffect","Switch","Route","NavLink","Snippets","api","test","setTest","data","loading","error","map","e","index"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,cAAvC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,GAAG,GAAG,eAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC,CAFqB,CAIrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BZ,QAAQ,CAACO,GAAD,CAAzC,CAxBqB,CA0BrB;;AAEA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBACGF,IAAI,CAACG,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtB,4BACE,QAAC,OAAD;AAAqB,UAAA,EAAE,EAAG,aAAYD,CAAE,EAAxC;AAAA,oBACGA;AADH,WAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AAAA,gBACGL,IAAI,CAACG,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtB,4BACE,QAAC,KAAD;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,IAAI,EAAG,aAAYD,CAAE,EAA9C;AAAA,iCACE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,WAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzDD;;GAAMT,Q;UAwB6BN,Q;;;KAxB7BM,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import useFetch from '../../../services/useFetch';\r\nimport { useState, useEffect } from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router';\r\n\r\nconst Snippets = () => {\r\n  const api = '/api/snippets';\r\n  const [test, setTest] = useState();\r\n\r\n  // const postData = async (url, data) => {\r\n  //   const res = await fetch(url, {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //     body: JSON.stringify(data),\r\n  //   })\r\n  //     .then((res) => res.text())\r\n  //     .then((res) => setTest(() => res));\r\n  //   return res;\r\n  // };\r\n  // useEffect(() => {\r\n  //   postData(api, { test: 'snippet 4' });\r\n  // }, []);\r\n\r\n  // postData(api, { test: 'snippet 4' })\r\n  //   .then((res) => res.text())\r\n  //   .then((res) => setTest(() => res));\r\n\r\n  const { data, loading, error } = useFetch(api);\r\n\r\n  // console.log(test);\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n  if (error) {\r\n    return <h2>Error!!!</h2>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        {data.map((e, index) => {\r\n          return (\r\n            <NavLink key={index} to={`/snippets/${e}`}>\r\n              {e}\r\n            </NavLink>\r\n          );\r\n        })}\r\n      </nav>\r\n      <Switch>\r\n        {data.map((e, index) => {\r\n          return (\r\n            <Route key={index} exact path={`/snippets/${e}`}>\r\n              <h2>{e}</h2>\r\n            </Route>\r\n          );\r\n        })}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snippets;\r\n"]},"metadata":{},"sourceType":"module"}