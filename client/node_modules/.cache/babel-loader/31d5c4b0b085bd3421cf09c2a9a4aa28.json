{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\src\\\\components\\\\mainScreen\\\\math\\\\Math.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport InactiveGame from './inactiveGame/InactiveGame';\nimport ActiveGame from './activeGame/ActiveGame';\nimport CompletedGame from './completedGame/CompletedGame';\nimport generateQuestions from './generateQuestions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Math = () => {\n  _s();\n\n  const inactiveGame = 'inactive';\n  const activeGame = 'active';\n  const completedGame = 'completedGame';\n  const questionTotal = 60;\n  const [gameState, setGameState] = useState(inactiveGame);\n  const [gameLength, setGameLength] = useState(5);\n  const [gameOperations, setGameOperations] = useState([]);\n  const [gameDifficulty, setGameDifficulty] = useState('medium');\n  const [gameQuestions, setGameQuestions] = useState([]);\n\n  const handleLengthChange = e => {\n    e.preventDefault();\n    setGameLength(() => e.target.value);\n  };\n\n  const handleOperationsChange = e => {\n    const operation = e.target.value;\n\n    if (gameOperations.includes(operation)) {\n      const filteredOperations = gameOperations.filter(val => val !== operation);\n      setGameOperations(() => filteredOperations);\n    } else {\n      setGameOperations(() => [...gameOperations, operation]);\n    }\n  };\n\n  const handleDifficultyChange = e => {\n    e.preventDefault();\n    setGameDifficulty(() => e.target.value);\n  };\n\n  const handleGameStart = e => {\n    setGameQuestions(generateQuestions(gameDifficulty, gameOperations, questionTotal));\n    setGameState(() => activeGame);\n  };\n\n  console.log(generateQuestions('easy', ['addition', 'multiplication', 'subtraction'], 60));\n\n  if (gameState === inactiveGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(InactiveGame, {\n        handleGameStart: handleGameStart,\n        gameLength: gameLength,\n        handleLengthChange: handleLengthChange,\n        gameOperations: gameOperations,\n        handleOperationsChange: handleOperationsChange,\n        gameDifficulty: gameDifficulty,\n        handleDifficultyChange: handleDifficultyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else if (gameState === activeGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(ActiveGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  } else if (gameState === completedGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CompletedGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Math, \"wTvN5DFZL4eJmLgAOqAnQLq/HcY=\");\n\n_c = Math;\nconst Wrapper = styled.section`\n  width: 100%;\n  height: 100%;\n  /* border: 2px solid red; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--color-text);\n  text-shadow: var(--shadow-text);\n`;\n_c2 = Wrapper;\nexport default Math;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Math\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/src/components/mainScreen/math/Math.js"],"names":["useState","styled","InactiveGame","ActiveGame","CompletedGame","generateQuestions","Math","inactiveGame","activeGame","completedGame","questionTotal","gameState","setGameState","gameLength","setGameLength","gameOperations","setGameOperations","gameDifficulty","setGameDifficulty","gameQuestions","setGameQuestions","handleLengthChange","e","preventDefault","target","value","handleOperationsChange","operation","includes","filteredOperations","filter","val","handleDifficultyChange","handleGameStart","console","log","justifyContent","Wrapper","section"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport InactiveGame from './inactiveGame/InactiveGame';\r\nimport ActiveGame from './activeGame/ActiveGame';\r\nimport CompletedGame from './completedGame/CompletedGame';\r\nimport generateQuestions from './generateQuestions';\r\n\r\nconst Math = () => {\r\n  const inactiveGame = 'inactive';\r\n  const activeGame = 'active';\r\n  const completedGame = 'completedGame';\r\n  const questionTotal = 60;\r\n\r\n  const [gameState, setGameState] = useState(inactiveGame);\r\n  const [gameLength, setGameLength] = useState(5);\r\n  const [gameOperations, setGameOperations] = useState([]);\r\n  const [gameDifficulty, setGameDifficulty] = useState('medium');\r\n  const [gameQuestions, setGameQuestions] = useState([]);\r\n\r\n  const handleLengthChange = (e) => {\r\n    e.preventDefault();\r\n    setGameLength(() => e.target.value);\r\n  };\r\n\r\n  const handleOperationsChange = (e) => {\r\n    const operation = e.target.value;\r\n    if (gameOperations.includes(operation)) {\r\n      const filteredOperations = gameOperations.filter((val) => val !== operation);\r\n      setGameOperations(() => filteredOperations);\r\n    } else {\r\n      setGameOperations(() => [...gameOperations, operation]);\r\n    }\r\n  };\r\n  const handleDifficultyChange = (e) => {\r\n    e.preventDefault();\r\n    setGameDifficulty(() => e.target.value);\r\n  };\r\n\r\n  const handleGameStart = (e) => {\r\n    setGameQuestions(generateQuestions(gameDifficulty, gameOperations, questionTotal));\r\n    setGameState(() => activeGame);\r\n  };\r\n  console.log(generateQuestions('easy', ['addition', 'multiplication', 'subtraction'], 60));\r\n\r\n  if (gameState === inactiveGame) {\r\n    return (\r\n      <Wrapper>\r\n        <InactiveGame\r\n          handleGameStart={handleGameStart}\r\n          gameLength={gameLength}\r\n          handleLengthChange={handleLengthChange}\r\n          gameOperations={gameOperations}\r\n          handleOperationsChange={handleOperationsChange}\r\n          gameDifficulty={gameDifficulty}\r\n          handleDifficultyChange={handleDifficultyChange}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  } else if (gameState === activeGame) {\r\n    return (\r\n      <Wrapper>\r\n        <ActiveGame />\r\n      </Wrapper>\r\n    );\r\n  } else if (gameState === completedGame) {\r\n    return (\r\n      <Wrapper style={{ justifyContent: 'center' }}>\r\n        <CompletedGame />\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  /* border: 2px solid red; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: var(--color-text);\r\n  text-shadow: var(--shadow-text);\r\n`;\r\nexport default Math;\r\n"]},"metadata":{},"sourceType":"module"}