{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\src\\\\components\\\\mainScreen\\\\math\\\\activeGame\\\\QuestionInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionInput = ({\n  isCorrect,\n  isAnswered\n}) => {\n  _s();\n\n  const [answer, setAnswer] = useState('');\n\n  const isNumber = val => {\n    return !isNaN(parseFloat(val)) && !isNaN(val - 0);\n  };\n\n  const isEmptyStr = val => val === '';\n\n  const isNotSpace = val => {\n    const str = val.toString();\n    return !str.includes(' ');\n  };\n\n  const isNegativeSymbol = val => {\n    return val === '-' && val.length === 1;\n  };\n\n  const isValid = (val, [...strictFuncs], [...conditionalFuncs]) => {\n    const isStrict = strictFuncs.map(e => e(val)).every(e => e === true);\n    const areConditionsMet = conditionalFuncs.map(e => e(val)).includes(true);\n    return isStrict && areConditionsMet ? true : false;\n  };\n\n  const handleChange = e => {\n    const inputVal = e.target.value;\n\n    if (isValid(inputVal, [isNotSpace], [isEmptyStr, isNumber, isNegativeSymbol])) {\n      setAnswer(() => inputVal);\n    }\n  };\n\n  return !isAnswered ? /*#__PURE__*/_jsxDEV(AnswerInput, {\n    autocomplete: false,\n    name: \"answer\",\n    type: \"text\",\n    value: answer,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AnswerSpan, {\n    isCorrect: isCorrect,\n    children: answer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionInput, \"epwReYWmqQUcEJwlNWWu20QHlN0=\");\n\n_c = QuestionInput;\nconst AnswerInput = styled.input`\n  font-size: inherit;\n  font-family: inherit;\n  background-color: var(--color-screen);\n  border: 2px solid var(--highlight-screen);\n  box-shadow: var(--highlight-screen-shadow);\n  border-radius: 8px;\n  width: 100px;\n  padding: 5px;\n  margin: 0;\n  color: var(--color-text);\n  text-shadow: var(--shadow-text);\n  -moz-appearance: none;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n_c2 = AnswerInput;\nconst AnswerSpan = styled.span``;\n_c3 = AnswerSpan;\nexport default QuestionInput;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuestionInput\");\n$RefreshReg$(_c2, \"AnswerInput\");\n$RefreshReg$(_c3, \"AnswerSpan\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/src/components/mainScreen/math/activeGame/QuestionInput.js"],"names":["useState","styled","QuestionInput","isCorrect","isAnswered","answer","setAnswer","isNumber","val","isNaN","parseFloat","isEmptyStr","isNotSpace","str","toString","includes","isNegativeSymbol","length","isValid","strictFuncs","conditionalFuncs","isStrict","map","e","every","areConditionsMet","handleChange","inputVal","target","value","AnswerInput","input","AnswerSpan","span"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAAA;;AACnD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,QAAQ,GAAIC,GAAD,IAAS;AACxB,WAAO,CAACC,KAAK,CAACC,UAAU,CAACF,GAAD,CAAX,CAAN,IAA2B,CAACC,KAAK,CAACD,GAAG,GAAG,CAAP,CAAxC;AACD,GAFD;;AAGA,QAAMG,UAAU,GAAIH,GAAD,IAASA,GAAG,KAAK,EAApC;;AACA,QAAMI,UAAU,GAAIJ,GAAD,IAAS;AAC1B,UAAMK,GAAG,GAAGL,GAAG,CAACM,QAAJ,EAAZ;AACA,WAAO,CAACD,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAR;AACD,GAHD;;AAIA,QAAMC,gBAAgB,GAAIR,GAAD,IAAS;AAChC,WAAOA,GAAG,KAAK,GAAR,IAAeA,GAAG,CAACS,MAAJ,KAAe,CAArC;AACD,GAFD;;AAGA,QAAMC,OAAO,GAAG,CAACV,GAAD,EAAM,CAAC,GAAGW,WAAJ,CAAN,EAAwB,CAAC,GAAGC,gBAAJ,CAAxB,KAAkD;AAChE,UAAMC,QAAQ,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACf,GAAD,CAAxB,EAA+BgB,KAA/B,CAAsCD,CAAD,IAAOA,CAAC,KAAK,IAAlD,CAAjB;AACA,UAAME,gBAAgB,GAAGL,gBAAgB,CAACE,GAAjB,CAAsBC,CAAD,IAAOA,CAAC,CAACf,GAAD,CAA7B,EAAoCO,QAApC,CAA6C,IAA7C,CAAzB;AACA,WAAOM,QAAQ,IAAII,gBAAZ,GAA+B,IAA/B,GAAsC,KAA7C;AACD,GAJD;;AAKA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B,UAAMI,QAAQ,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAA1B;;AACA,QAAIX,OAAO,CAACS,QAAD,EAAW,CAACf,UAAD,CAAX,EAAyB,CAACD,UAAD,EAAaJ,QAAb,EAAuBS,gBAAvB,CAAzB,CAAX,EAA+E;AAC7EV,MAAAA,SAAS,CAAC,MAAMqB,QAAP,CAAT;AACD;AACF,GALD;;AAMA,SAAO,CAACvB,UAAD,gBACL,QAAC,WAAD;AAAa,IAAA,YAAY,EAAE,KAA3B;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,KAAK,EAAEC,MAAnE;AAA2E,IAAA,QAAQ,EAAEqB;AAArF;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEvB,SAAvB;AAAA,cAAmCE;AAAnC;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CA7BD;;GAAMH,a;;KAAAA,a;AA+BN,MAAM4B,WAAW,GAAG7B,MAAM,CAAC8B,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,W;AAmBN,MAAME,UAAU,GAAG/B,MAAM,CAACgC,IAAK,EAA/B;MAAMD,U;AAEN,eAAe9B,aAAf","sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst QuestionInput = ({ isCorrect, isAnswered }) => {\r\n  const [answer, setAnswer] = useState('');\r\n  const isNumber = (val) => {\r\n    return !isNaN(parseFloat(val)) && !isNaN(val - 0);\r\n  };\r\n  const isEmptyStr = (val) => val === '';\r\n  const isNotSpace = (val) => {\r\n    const str = val.toString();\r\n    return !str.includes(' ');\r\n  };\r\n  const isNegativeSymbol = (val) => {\r\n    return val === '-' && val.length === 1;\r\n  };\r\n  const isValid = (val, [...strictFuncs], [...conditionalFuncs]) => {\r\n    const isStrict = strictFuncs.map((e) => e(val)).every((e) => e === true);\r\n    const areConditionsMet = conditionalFuncs.map((e) => e(val)).includes(true);\r\n    return isStrict && areConditionsMet ? true : false;\r\n  };\r\n  const handleChange = (e) => {\r\n    const inputVal = e.target.value;\r\n    if (isValid(inputVal, [isNotSpace], [isEmptyStr, isNumber, isNegativeSymbol])) {\r\n      setAnswer(() => inputVal);\r\n    }\r\n  };\r\n  return !isAnswered ? (\r\n    <AnswerInput autocomplete={false} name=\"answer\" type=\"text\" value={answer} onChange={handleChange} />\r\n  ) : (\r\n    <AnswerSpan isCorrect={isCorrect}>{answer}</AnswerSpan>\r\n  );\r\n};\r\n\r\nconst AnswerInput = styled.input`\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  background-color: var(--color-screen);\r\n  border: 2px solid var(--highlight-screen);\r\n  box-shadow: var(--highlight-screen-shadow);\r\n  border-radius: 8px;\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 0;\r\n  color: var(--color-text);\r\n  text-shadow: var(--shadow-text);\r\n  -moz-appearance: none;\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst AnswerSpan = styled.span``;\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}