{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\src\\\\components\\\\mainScreen\\\\math\\\\activeGame\\\\StatusBar.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Btn from '../../../Btn';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatusBar = ({\n  gameLength,\n  correctQuestions,\n  incorrectQuestions,\n  endGame\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TimerContainer, {\n      children: [\"Time Remaining: \", /*#__PURE__*/_jsxDEV(Timer, {\n        endGame: endGame,\n        gameLength: gameLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"Answered: \", correctQuestions.length, \" / \", correctQuestions.length + incorrectQuestions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledBtn, {\n      children: \"End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StatusBar;\nconst Wrapper = styled.div`\n  border: 2px solid red;\n  position: sticky;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: var(--color-screen);\n  border: 2px solid var(--highlight-screen);\n  border-radius: 8px;\n  box-shadow: var(--highlight-screen-shadow);\n  z-index: 20;\n  width: 100%;\n`;\n_c2 = Wrapper;\nconst Container = styled.div`\n  font-size: 1.4rem;\n  padding: 0px 20px;\n\n  @media (max-width: 1800px) {\n    font-size: 1rem;\n  }\n  @media (max-width: 1300px) {\n    padding: 0px 15px;\n    font-size: 0.9rem;\n  }\n`;\n_c3 = Container;\nconst TimerContainer = styled(Container)`\n  width: 320px;\n  /* border: 2px solid red; */\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: 1800px) {\n    width: 240px;\n  }\n  @media (max-width: 1300px) {\n    width: 220px;\n  }\n`;\n_c4 = TimerContainer;\nconst StyledBtn = styled(Btn)`\n  padding: 5px 10px;\n  font-size: 1.2rem;\n  @media (max-width: 1800px) {\n    font-size: 1rem;\n  }\n`;\n_c5 = StyledBtn;\nexport const MemoizedStatusBar = /*#__PURE__*/React.memo(StatusBar);\n_c6 = MemoizedStatusBar;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StatusBar\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"TimerContainer\");\n$RefreshReg$(_c5, \"StyledBtn\");\n$RefreshReg$(_c6, \"MemoizedStatusBar\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/src/components/mainScreen/math/activeGame/StatusBar.js"],"names":["React","styled","Btn","Timer","StatusBar","gameLength","correctQuestions","incorrectQuestions","endGame","length","Wrapper","div","Container","TimerContainer","StyledBtn","MemoizedStatusBar","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,gBAAd;AAAgCC,EAAAA,kBAAhC;AAAoDC,EAAAA;AAApD,CAAD,KAAmE;AACnF,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,cAAD;AAAA,kDACkB,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,OAAhB;AAAyB,QAAA,UAAU,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAA,+BACaC,gBAAgB,CAACG,MAD9B,SACyCH,gBAAgB,CAACG,MAAjB,GAA0BF,kBAAkB,CAACE,MADtF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;KAAML,S;AAcN,MAAMM,OAAO,GAAGT,MAAM,CAACU,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,O;AAeN,MAAME,SAAS,GAAGX,MAAM,CAACU,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMC,S;AAYN,MAAMC,cAAc,GAAGZ,MAAM,CAACW,SAAD,CAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMC,c;AAcN,MAAMC,SAAS,GAAGb,MAAM,CAACC,GAAD,CAAM;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMY,S;AAQN,OAAO,MAAMC,iBAAiB,gBAAGf,KAAK,CAACgB,IAAN,CAAWZ,SAAX,CAA1B;MAAMW,iB","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Btn from '../../../Btn';\r\nimport Timer from './Timer';\r\n\r\nconst StatusBar = ({ gameLength, correctQuestions, incorrectQuestions, endGame }) => {\r\n  return (\r\n    <Wrapper>\r\n      <TimerContainer>\r\n        Time Remaining: <Timer endGame={endGame} gameLength={gameLength} />\r\n      </TimerContainer>\r\n      <Container>\r\n        Answered: {correctQuestions.length} / {correctQuestions.length + incorrectQuestions.length}\r\n      </Container>\r\n      <StyledBtn>End</StyledBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  border: 2px solid red;\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  background-color: var(--color-screen);\r\n  border: 2px solid var(--highlight-screen);\r\n  border-radius: 8px;\r\n  box-shadow: var(--highlight-screen-shadow);\r\n  z-index: 20;\r\n  width: 100%;\r\n`;\r\nconst Container = styled.div`\r\n  font-size: 1.4rem;\r\n  padding: 0px 20px;\r\n\r\n  @media (max-width: 1800px) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (max-width: 1300px) {\r\n    padding: 0px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\nconst TimerContainer = styled(Container)`\r\n  width: 320px;\r\n  /* border: 2px solid red; */\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 1800px) {\r\n    width: 240px;\r\n  }\r\n  @media (max-width: 1300px) {\r\n    width: 220px;\r\n  }\r\n`;\r\n\r\nconst StyledBtn = styled(Btn)`\r\n  padding: 5px 10px;\r\n  font-size: 1.2rem;\r\n  @media (max-width: 1800px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const MemoizedStatusBar = React.memo(StatusBar);\r\n"]},"metadata":{},"sourceType":"module"}