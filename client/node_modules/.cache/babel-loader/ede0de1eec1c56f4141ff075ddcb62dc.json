{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\src\\\\components\\\\mainScreen\\\\math\\\\activeGame\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport OperationIcon from './OperationIcon';\nimport EqualsIcon from '../../../../icons/Equals';\nimport Btn from '../../../Btn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  valOne,\n  valTwo,\n  operation\n}) => {\n  _s();\n\n  const [answer, setAnswer] = useState('');\n  const [isAnswered, setIsAnswered] = useState();\n  const [isRight, setIsRight] = useState();\n\n  const handleChange = e => {\n    setAnswer(() => e.target.value);\n  };\n\n  const checkAnswer = () => {\n    if (operation === 'addition') {\n      const answer = valOne + valTwo;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [valOne, \" \", /*#__PURE__*/_jsxDEV(OperationIcon, {\n        operation: operation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this), \" \", valTwo, \" \", /*#__PURE__*/_jsxDEV(StyledEqualsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        type: \"number\",\n        value: answer,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"WdoY7CePtFMk99d/80vIJZsgGkU=\");\n\n_c = Question;\nconst Wrapper = styled.form`\n  font-size: 1.2rem;\n  background-color: var(--color-screen);\n  border: 2px solid var(--highlight-screen);\n  box-shadow: var(--highlight-screen-shadow);\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-width: 300px;\n  padding: 20px;\n  margin: 10px;\n`;\n_c2 = Wrapper;\nconst StyledEqualsIcon = styled(EqualsIcon)`\n  height: 16px;\n  width: 16px;\n  margin: 0px 4px;\n`;\n_c3 = StyledEqualsIcon;\nconst Answer = styled.input`\n  font-size: inherit;\n  font-family: inherit;\n  background-color: var(--color-screen);\n  border: 2px solid var(--highlight-screen);\n  box-shadow: var(--highlight-screen-shadow);\n  border-radius: 8px;\n  width: 100px;\n  padding: 5px;\n  margin: 0;\n  color: var(--color-text);\n  text-shadow: var(--shadow-text);\n  -moz-appearance: none;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n_c4 = Answer;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n_c5 = Container;\nconst SubmitBtn = styled(Btn)`\n  padding: 5px 10px;\n  font-size: 1rem;\n`;\n_c6 = SubmitBtn;\nexport default Question;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"StyledEqualsIcon\");\n$RefreshReg$(_c4, \"Answer\");\n$RefreshReg$(_c5, \"Container\");\n$RefreshReg$(_c6, \"SubmitBtn\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/src/components/mainScreen/math/activeGame/Question.js"],"names":["useState","styled","OperationIcon","EqualsIcon","Btn","Question","valOne","valTwo","operation","answer","setAnswer","isAnswered","setIsAnswered","isRight","setIsRight","handleChange","e","target","value","checkAnswer","Wrapper","form","StyledEqualsIcon","Answer","input","Container","div","SubmitBtn"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,SAAS,CAAC,MAAMM,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAT;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIX,SAAS,KAAK,UAAlB,EAA8B;AAC5B,YAAMC,MAAM,GAAGH,MAAM,GAAGC,MAAxB;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAA,iBACGD,MADH,oBACW,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cADX,OACoDD,MADpD,oBAC4D,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAD5D,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAEE,MAA7B;AAAqC,QAAA,QAAQ,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;GAAMV,Q;;KAAAA,Q;AAyBN,MAAMe,OAAO,GAAGnB,MAAM,CAACoB,IAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,O;AAeN,MAAME,gBAAgB,GAAGrB,MAAM,CAACE,UAAD,CAAa;AAC5C;AACA;AACA;AACA,CAJA;MAAMmB,gB;AAKN,MAAMC,MAAM,GAAGtB,MAAM,CAACuB,KAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,M;AAmBN,MAAME,SAAS,GAAGxB,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMD,S;AAKN,MAAME,SAAS,GAAG1B,MAAM,CAACG,GAAD,CAAM;AAC9B;AACA;AACA,CAHA;MAAMuB,S;AAKN,eAAetB,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport OperationIcon from './OperationIcon';\r\nimport EqualsIcon from '../../../../icons/Equals';\r\nimport Btn from '../../../Btn';\r\n\r\nconst Question = ({ valOne, valTwo, operation }) => {\r\n  const [answer, setAnswer] = useState('');\r\n  const [isAnswered, setIsAnswered] = useState();\r\n  const [isRight, setIsRight] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    setAnswer(() => e.target.value);\r\n  };\r\n  const checkAnswer = () => {\r\n    if (operation === 'addition') {\r\n      const answer = valOne + valTwo;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        {valOne} <OperationIcon operation={operation} /> {valTwo} <StyledEqualsIcon />\r\n        <Answer type=\"number\" value={answer} onChange={handleChange} />\r\n      </Container>\r\n      <SubmitBtn>Submit</SubmitBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.form`\r\n  font-size: 1.2rem;\r\n  background-color: var(--color-screen);\r\n  border: 2px solid var(--highlight-screen);\r\n  box-shadow: var(--highlight-screen-shadow);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 300px;\r\n  padding: 20px;\r\n  margin: 10px;\r\n`;\r\n\r\nconst StyledEqualsIcon = styled(EqualsIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin: 0px 4px;\r\n`;\r\nconst Answer = styled.input`\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  background-color: var(--color-screen);\r\n  border: 2px solid var(--highlight-screen);\r\n  box-shadow: var(--highlight-screen-shadow);\r\n  border-radius: 8px;\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 0;\r\n  color: var(--color-text);\r\n  text-shadow: var(--shadow-text);\r\n  -moz-appearance: none;\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\nconst SubmitBtn = styled(Btn)`\r\n  padding: 5px 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}