{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Projects\\\\the-hub\\\\src\\\\components\\\\mainScreen\\\\math\\\\Math.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport InactiveGame from './inactiveGame/InactiveGame';\nimport { MemoizedActiveGame } from './activeGame/ActiveGame';\nimport CompletedGame from './completedGame/CompletedGame';\nimport generateQuestions, { operationsArr, difficultiesArr } from './generateQuestions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Math = () => {\n  _s();\n\n  const inactiveGame = 'inactive';\n  const activeGame = 'active';\n  const completedGame = 'completedGame';\n  const questionTotal = 60;\n  const [gameState, setGameState] = useState(inactiveGame);\n  const [gameLength, setGameLength] = useState(5);\n  const [gameOperations, setGameOperations] = useState([...operationsArr]);\n  const [gameDifficulty, setGameDifficulty] = useState(difficultiesArr[1]);\n  const [gameQuestions, setGameQuestions] = useState([]);\n  /*Settings handlers*/\n\n  const handleLengthChange = e => {\n    e.preventDefault();\n    setGameLength(() => e.target.value);\n  };\n\n  const handleOperationsChange = e => {\n    const operation = e.target.value;\n\n    if (gameOperations.includes(operation)) {\n      const filteredOperations = gameOperations.filter(val => val !== operation);\n      setGameOperations(() => filteredOperations);\n    } else {\n      setGameOperations(() => [...gameOperations, operation]);\n    }\n  };\n\n  const handleDifficultyChange = e => {\n    e.preventDefault();\n    setGameDifficulty(() => e.target.value);\n  };\n\n  const handleGameStart = () => {\n    setGameQuestions(generateQuestions(gameDifficulty, gameOperations, questionTotal));\n    setGameState(() => activeGame);\n  };\n  /********/\n\n  /*Question Handlers*/\n\n\n  const handleIsCorrect = useCallback((isCorrect, questionObj) => {\n    if (isCorrect) {\n      setCorrectQuestions(() => [...correctQuestions, questionObj]);\n    } else {\n      setIncorrectQuestions(() => [...incorrectQuestions, questionObj]);\n    }\n  }, [correctQuestions, incorrectQuestions]);\n  /*Game over Handlers*/\n\n  const endGame = useCallback(() => {\n    setGameState(() => completedGame);\n  }, [setGameState, completedGame]);\n  /******/\n\n  if (gameState === inactiveGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(InactiveGame, {\n        handleGameStart: handleGameStart,\n        gameLength: gameLength,\n        handleLengthChange: handleLengthChange,\n        gameOperations: gameOperations,\n        handleOperationsChange: handleOperationsChange,\n        gameDifficulty: gameDifficulty,\n        handleDifficultyChange: handleDifficultyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else if (gameState === activeGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(MemoizedActiveGame, {\n        gameQuestions: gameQuestions,\n        gameLength: gameLength,\n        handleIsCorrect: handleIsCorrect,\n        correctQuestions: correctQuestions,\n        incorrectQuestions: incorrectQuestions,\n        endGame: endGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else if (gameState === completedGame) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CompletedGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Math, \"v7ECrf2SjF6MtQLUf5PFPPEFU0U=\");\n\n_c = Math;\nconst Wrapper = styled.section`\n  width: 100%;\n  height: 100%;\n  /* border: 2px solid red; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--color-text);\n  text-shadow: var(--shadow-text);\n`;\n_c2 = Wrapper;\nexport default Math;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Math\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["D:/Coding/Projects/the-hub/src/components/mainScreen/math/Math.js"],"names":["useState","useCallback","styled","InactiveGame","MemoizedActiveGame","CompletedGame","generateQuestions","operationsArr","difficultiesArr","Math","inactiveGame","activeGame","completedGame","questionTotal","gameState","setGameState","gameLength","setGameLength","gameOperations","setGameOperations","gameDifficulty","setGameDifficulty","gameQuestions","setGameQuestions","handleLengthChange","e","preventDefault","target","value","handleOperationsChange","operation","includes","filteredOperations","filter","val","handleDifficultyChange","handleGameStart","handleIsCorrect","isCorrect","questionObj","setCorrectQuestions","correctQuestions","setIncorrectQuestions","incorrectQuestions","endGame","justifyContent","Wrapper","section"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport InactiveGame from './inactiveGame/InactiveGame';\r\nimport { MemoizedActiveGame } from './activeGame/ActiveGame';\r\nimport CompletedGame from './completedGame/CompletedGame';\r\nimport generateQuestions, { operationsArr, difficultiesArr } from './generateQuestions';\r\n\r\nconst Math = () => {\r\n  const inactiveGame = 'inactive';\r\n  const activeGame = 'active';\r\n  const completedGame = 'completedGame';\r\n  const questionTotal = 60;\r\n\r\n  const [gameState, setGameState] = useState(inactiveGame);\r\n  const [gameLength, setGameLength] = useState(5);\r\n  const [gameOperations, setGameOperations] = useState([...operationsArr]);\r\n  const [gameDifficulty, setGameDifficulty] = useState(difficultiesArr[1]);\r\n  const [gameQuestions, setGameQuestions] = useState([]);\r\n\r\n  /*Settings handlers*/\r\n  const handleLengthChange = (e) => {\r\n    e.preventDefault();\r\n    setGameLength(() => e.target.value);\r\n  };\r\n  const handleOperationsChange = (e) => {\r\n    const operation = e.target.value;\r\n    if (gameOperations.includes(operation)) {\r\n      const filteredOperations = gameOperations.filter((val) => val !== operation);\r\n      setGameOperations(() => filteredOperations);\r\n    } else {\r\n      setGameOperations(() => [...gameOperations, operation]);\r\n    }\r\n  };\r\n  const handleDifficultyChange = (e) => {\r\n    e.preventDefault();\r\n    setGameDifficulty(() => e.target.value);\r\n  };\r\n\r\n  const handleGameStart = () => {\r\n    setGameQuestions(generateQuestions(gameDifficulty, gameOperations, questionTotal));\r\n    setGameState(() => activeGame);\r\n  };\r\n  /********/\r\n\r\n  /*Question Handlers*/\r\n  const handleIsCorrect = useCallback(\r\n    (isCorrect, questionObj) => {\r\n      if (isCorrect) {\r\n        setCorrectQuestions(() => [...correctQuestions, questionObj]);\r\n      } else {\r\n        setIncorrectQuestions(() => [...incorrectQuestions, questionObj]);\r\n      }\r\n    },\r\n    [correctQuestions, incorrectQuestions]\r\n  );\r\n  /*Game over Handlers*/\r\n  const endGame = useCallback(() => {\r\n    setGameState(() => completedGame);\r\n  }, [setGameState, completedGame]);\r\n\r\n  /******/\r\n\r\n  if (gameState === inactiveGame) {\r\n    return (\r\n      <Wrapper>\r\n        <InactiveGame\r\n          handleGameStart={handleGameStart}\r\n          gameLength={gameLength}\r\n          handleLengthChange={handleLengthChange}\r\n          gameOperations={gameOperations}\r\n          handleOperationsChange={handleOperationsChange}\r\n          gameDifficulty={gameDifficulty}\r\n          handleDifficultyChange={handleDifficultyChange}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  } else if (gameState === activeGame) {\r\n    return (\r\n      <Wrapper>\r\n        <MemoizedActiveGame\r\n          gameQuestions={gameQuestions}\r\n          gameLength={gameLength}\r\n          handleIsCorrect={handleIsCorrect}\r\n          correctQuestions={correctQuestions}\r\n          incorrectQuestions={incorrectQuestions}\r\n          endGame={endGame}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  } else if (gameState === completedGame) {\r\n    return (\r\n      <Wrapper style={{ justifyContent: 'center' }}>\r\n        <CompletedGame />\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  /* border: 2px solid red; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: var(--color-text);\r\n  text-shadow: var(--shadow-text);\r\n`;\r\nexport default Math;\r\n"]},"metadata":{},"sourceType":"module"}